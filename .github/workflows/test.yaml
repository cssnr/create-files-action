name: "Test"

on:
  workflow_dispatch:
  #schedule:
  #  - cron: "18 18 * * 1,3,5"
  push:
    branches: ["**"]
    paths:
      - ".github/workflows/test.yaml"
      - "dist/**"
      - "src/**"
      - "package*.json"
      - "requirements*.txt"
      - "action.yml"
      - "Dockerfile"
      - "pyproject.toml"

env:
  files: "index.html robots.txt"
  #image: "false"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    timeout-minutes: 5

    permissions:
      contents: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Debug CTX github"
        if: ${{ !github.event.act }}
        continue-on-error: true
        env:
          GITHUB_CTX: ${{ toJSON(github) }}
        run: echo "$GITHUB_CTX"

      #- name: "Debug"
      #  continue-on-error: true
      #  run: |
      #    echo "env.image: ${{ env.image }}"
      #
      #- name: "Edit YAML"
      #  if: ${{ env.image != 'true' }}
      #  uses: Liam-Johnston/yaml-helper@V1
      #  with:
      #    file-location: "action.yml"
      #    create-if-does-not-exist: false
      #    content: |
      #      runs:
      #        image: Dockerfile

      - name: "Control"
        env:
          file: "index.html"
        run: |
          for file in ${{ env.files }};do
            echo "Checking file: ${file}"
            if [ -f "${file}" ];then
              echo "Control file already exists: ${file}"
              exit 1
            fi
          done

      - name: "Test - redirect"
        id: redirect
        uses: ./
        with:
          type: "redirect"
          file: "index.html"
          data: |
            url: https://smashedr.github.io/github-projects/
            text: /github-projects
            title: Rolf Broke
            timer: 3

      - name: "Test - robots"
        id: robots
        uses: ./
        with:
          type: "robots"
          file: "robots.txt"

      - name: "Validate"
        #if: ${{ !github.event.act }}
        id: validate
        env:
          redirect: ${{ steps.redirect.outputs.content }}
          robots: ${{ steps.redirect.outputs.content }}
        run: |
          ls .
          for _file in ${{ env.files }};do
            echo "::group::${_file}"
            file "${_file}"
            echo "--------------------"
            head "${_file}" || _fail=1
            echo "::endgroup::"
          done
          [[ -z "${redirect}" ]] && echo "No Output: redirect" && _fail=1
          [[ -z "${robots}" ]] && echo "No Output: robots" && _fail=1
          [[ -z "${control}" ]] && echo "No Output: control" && _fail=1
          if [ -n "${_fail}" ];then
            exit 1
          fi

      - name: "Schedule Failure Notification"
        if: ${{ failure() && github.event_name == 'schedule' }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
